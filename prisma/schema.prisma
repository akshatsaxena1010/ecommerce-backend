generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://csqvnfjk:HF4u6yybO7BbzKwAhglPwlOwTu4CQtB6@tiny.db.elephantsql.com/csqvnfjk"
}

model catalogs {
  id        Int        @id @default(autoincrement())
  seller_id Int?
  users     users?     @relation(fields: [seller_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_catalog_users")
  orders    orders[]
  products  products[]
}

model orders {
  id         Int       @id @default(autoincrement())
  buyer_id   Int?
  catalog_id Int?
  products   Int[]
  catalogs   catalogs? @relation(fields: [catalog_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_orders_catalogs")
  users      users?    @relation(fields: [buyer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_orders_users_buyer")
}

model products {
  id           Int       @id @default(autoincrement())
  catalog_id   Int?
  product_name String
  price        Int?
  catalogs     catalogs? @relation(fields: [catalog_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_products_catalogs")
}

model test {
  id   Int     @id @default(autoincrement())
  test String?
}

model users {
  id       Int        @id @default(autoincrement())
  name     String     @unique(map: "uq_users_name")
  password String
  type     String
  catalogs catalogs[]
  orders   orders[]
}
